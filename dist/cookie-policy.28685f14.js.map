{"mappings":"ACAA,MAAM,UACF,aAAc,CACV,IAAI,CAAC,OAAO,CAAG,IAAI,IACnB,IAAI,CAAC,WAAW,CAAG,CAAA,CACvB,CAEA,MAAO,CACC,IAAI,CAAC,WAAW,GAGpB,IAAI,CAAC,aAAa,GAGlB,OAAO,gBAAgB,CAAC,SAAU,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,GAE7D,IAAI,CAAC,WAAW,CAAG,CAAA,EACvB,CAEA,eAAgB,CAyBZ,IAAK,GAAM,CAAC,EAAQ,EAAM,GAAI,OAAO,OAAO,CAvBtB,CAClB,SAAU,CACN,QAAS,CAAC,IAAK,GAAG,CAClB,OAAQ,CAAC,IAAK,GAAG,CACjB,OAAQ,CAAC,IAAK,GAAG,AACrB,EACA,UAAW,CACP,QAAS,CAAC,IAAK,IAAI,CACnB,OAAQ,CAAC,IAAK,IAAI,CAClB,OAAQ,IACZ,EACA,UAAW,CACP,QAAS,CAAC,IAAK,GAAG,CAClB,OAAQ,CAAC,IAAK,GAAG,CACjB,OAAQ,CAAC,IAAK,GAAG,AACrB,EACA,SAAU,CACN,QAAS,CAAC,IAAK,GAAG,CAClB,OAAQ,CAAC,IAAK,GAAG,CACjB,OAAQ,CAAC,IAAK,GAAG,AACrB,CACJ,GAGI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAQ,EAEjC,CAEA,cAAe,CACX,IAAM,EAAQ,OAAO,UAAU,CAC3B,EAAW,EAAQ,KAAO,UAAY,EAAQ,IAAM,SAAW,SAEnE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAO,KAErB,AADc,SAAS,cAAc,CAAC,IACzB,CAAK,CAAC,EAAS,EAC5B,IAAI,CAAC,SAAS,CAAC,EAAQ,CAAK,CAAC,EAAS,CAE9C,EACJ,CAEA,UAAU,CAAM,CAAE,CAAI,CAAE,CAEpB,QAAQ,GAAG,CAAC,CAAC,cAAc,EAAE,EAAO,WAAW,EAAE,EAAA,CAAM,CAC3D,CACJ,CAGA,IAAM,UAAY,IAAI,SAClB,AAAsC,CAAA,SAAtC,aAAa,OAAO,CAAC,cACrB,UAAU,IAAI","sources":["<anon>","src/js/ad-manager.js"],"sourcesContent":["class AdManager {\n    constructor(){\n        this.adSlots = new Map();\n        this.initialized = false;\n    }\n    init() {\n        if (this.initialized) return;\n        // Initialize ad slots\n        this.defineAdSlots();\n        // Handle responsive ads\n        window.addEventListener('resize', this.handleResize.bind(this));\n        this.initialized = true;\n    }\n    defineAdSlots() {\n        // Define ad slots with different sizes for responsive design\n        const adDefinitions = {\n            headerAd: {\n                desktop: [\n                    728,\n                    90\n                ],\n                tablet: [\n                    468,\n                    60\n                ],\n                mobile: [\n                    320,\n                    50\n                ]\n            },\n            sidebarAd: {\n                desktop: [\n                    300,\n                    600\n                ],\n                tablet: [\n                    300,\n                    250\n                ],\n                mobile: null\n            },\n            contentAd: {\n                desktop: [\n                    728,\n                    90\n                ],\n                tablet: [\n                    468,\n                    60\n                ],\n                mobile: [\n                    320,\n                    50\n                ]\n            },\n            footerAd: {\n                desktop: [\n                    728,\n                    90\n                ],\n                tablet: [\n                    468,\n                    60\n                ],\n                mobile: [\n                    320,\n                    50\n                ]\n            }\n        };\n        for (const [slotId, sizes] of Object.entries(adDefinitions))this.adSlots.set(slotId, sizes);\n    }\n    handleResize() {\n        const width = window.innerWidth;\n        let sizeType = width > 1024 ? 'desktop' : width > 768 ? 'tablet' : 'mobile';\n        this.adSlots.forEach((sizes, slotId)=>{\n            const adElement = document.getElementById(slotId);\n            if (adElement && sizes[sizeType]) this.refreshAd(slotId, sizes[sizeType]);\n        });\n    }\n    refreshAd(slotId, size) {\n        // Implement ad refresh logic\n        console.log(`Refreshing ad ${slotId} with size ${size}`);\n    }\n}\n// Initialize ad manager\nconst adManager = new AdManager();\nif (localStorage.getItem('adConsent') === 'true') adManager.init();\n\n//# sourceMappingURL=cookie-policy.28685f14.js.map\n","class AdManager {\r\n    constructor() {\r\n        this.adSlots = new Map();\r\n        this.initialized = false;\r\n    }\r\n\r\n    init() {\r\n        if (this.initialized) return;\r\n        \r\n        // Initialize ad slots\r\n        this.defineAdSlots();\r\n        \r\n        // Handle responsive ads\r\n        window.addEventListener('resize', this.handleResize.bind(this));\r\n        \r\n        this.initialized = true;\r\n    }\r\n\r\n    defineAdSlots() {\r\n        // Define ad slots with different sizes for responsive design\r\n        const adDefinitions = {\r\n            headerAd: {\r\n                desktop: [728, 90],\r\n                tablet: [468, 60],\r\n                mobile: [320, 50]\r\n            },\r\n            sidebarAd: {\r\n                desktop: [300, 600],\r\n                tablet: [300, 250],\r\n                mobile: null\r\n            },\r\n            contentAd: {\r\n                desktop: [728, 90],\r\n                tablet: [468, 60],\r\n                mobile: [320, 50]\r\n            },\r\n            footerAd: {\r\n                desktop: [728, 90],\r\n                tablet: [468, 60],\r\n                mobile: [320, 50]\r\n            }\r\n        };\r\n\r\n        for (const [slotId, sizes] of Object.entries(adDefinitions)) {\r\n            this.adSlots.set(slotId, sizes);\r\n        }\r\n    }\r\n\r\n    handleResize() {\r\n        const width = window.innerWidth;\r\n        let sizeType = width > 1024 ? 'desktop' : width > 768 ? 'tablet' : 'mobile';\r\n        \r\n        this.adSlots.forEach((sizes, slotId) => {\r\n            const adElement = document.getElementById(slotId);\r\n            if (adElement && sizes[sizeType]) {\r\n                this.refreshAd(slotId, sizes[sizeType]);\r\n            }\r\n        });\r\n    }\r\n\r\n    refreshAd(slotId, size) {\r\n        // Implement ad refresh logic\r\n        console.log(`Refreshing ad ${slotId} with size ${size}`);\r\n    }\r\n}\r\n\r\n// Initialize ad manager\r\nconst adManager = new AdManager();\r\nif (localStorage.getItem('adConsent') === 'true') {\r\n    adManager.init();\r\n} "],"names":["AdManager","constructor","adSlots","Map","initialized","init","defineAdSlots","window","addEventListener","handleResize","bind","slotId","sizes","Object","entries","headerAd","desktop","tablet","mobile","sidebarAd","contentAd","footerAd","set","width","innerWidth","sizeType","forEach","adElement","document","getElementById","refreshAd","size","console","log","adManager","localStorage","getItem"],"version":3,"file":"cookie-policy.28685f14.js.map"}