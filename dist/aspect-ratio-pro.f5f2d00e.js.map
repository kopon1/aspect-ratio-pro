{"mappings":"ACCA,MAAM,aACF,aAAc,CACV,IAAI,CAAC,WAAW,CAAG,SAAS,cAAc,CAAC,eAC3C,IAAI,CAAC,YAAY,CAAG,aAAa,OAAO,CAAC,UAAY,QACrD,IAAI,CAAC,IAAI,EACb,CAEA,MAAO,CAEH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,EAG/B,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,QAAS,KACvC,IAAI,CAAC,WAAW,EACpB,EACJ,CAEA,SAAS,CAAK,CAAE,CACZ,SAAS,eAAe,CAAC,YAAY,CAAC,aAAc,GACpD,aAAa,OAAO,CAAC,QAAS,GAG9B,IAAM,EAAO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IACxC,AAAU,CAAA,SAAV,GACA,EAAK,SAAS,CAAC,MAAM,CAAC,WACtB,EAAK,SAAS,CAAC,GAAG,CAAC,YAEnB,EAAK,SAAS,CAAC,MAAM,CAAC,UACtB,EAAK,SAAS,CAAC,GAAG,CAAC,WAE3B,CAEA,aAAc,CACV,IAAM,EAAW,AAAsB,UAAtB,IAAI,CAAC,YAAY,CAAe,OAAS,OAC1D,CAAA,IAAI,CAAC,YAAY,CAAG,EACpB,IAAI,CAAC,QAAQ,CAAC,EAClB,CACJ,CAGA,IAAM,aAAe,IAAI","sources":["<anon>","src/js/theme-manager.js"],"sourcesContent":["// Theme Manager\nclass ThemeManager {\n    constructor(){\n        this.themeToggle = document.getElementById('themeToggle');\n        this.currentTheme = localStorage.getItem('theme') || 'light';\n        this.init();\n    }\n    init() {\n        // Set initial theme\n        this.setTheme(this.currentTheme);\n        // Add event listener to theme toggle button\n        this.themeToggle.addEventListener('click', ()=>{\n            this.toggleTheme();\n        });\n    }\n    setTheme(theme) {\n        document.documentElement.setAttribute('data-theme', theme);\n        localStorage.setItem('theme', theme);\n        // Update icon\n        const icon = this.themeToggle.querySelector('i');\n        if (theme === 'dark') {\n            icon.classList.remove('fa-moon');\n            icon.classList.add('fa-sun');\n        } else {\n            icon.classList.remove('fa-sun');\n            icon.classList.add('fa-moon');\n        }\n    }\n    toggleTheme() {\n        const newTheme = this.currentTheme === 'light' ? 'dark' : 'light';\n        this.currentTheme = newTheme;\n        this.setTheme(newTheme);\n    }\n}\n// Initialize theme manager\nconst themeManager = new ThemeManager();\n\n//# sourceMappingURL=aspect-ratio-pro.f5f2d00e.js.map\n","// Theme Manager\r\nclass ThemeManager {\r\n    constructor() {\r\n        this.themeToggle = document.getElementById('themeToggle');\r\n        this.currentTheme = localStorage.getItem('theme') || 'light';\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        // Set initial theme\r\n        this.setTheme(this.currentTheme);\r\n\r\n        // Add event listener to theme toggle button\r\n        this.themeToggle.addEventListener('click', () => {\r\n            this.toggleTheme();\r\n        });\r\n    }\r\n\r\n    setTheme(theme) {\r\n        document.documentElement.setAttribute('data-theme', theme);\r\n        localStorage.setItem('theme', theme);\r\n        \r\n        // Update icon\r\n        const icon = this.themeToggle.querySelector('i');\r\n        if (theme === 'dark') {\r\n            icon.classList.remove('fa-moon');\r\n            icon.classList.add('fa-sun');\r\n        } else {\r\n            icon.classList.remove('fa-sun');\r\n            icon.classList.add('fa-moon');\r\n        }\r\n    }\r\n\r\n    toggleTheme() {\r\n        const newTheme = this.currentTheme === 'light' ? 'dark' : 'light';\r\n        this.currentTheme = newTheme;\r\n        this.setTheme(newTheme);\r\n    }\r\n}\r\n\r\n// Initialize theme manager\r\nconst themeManager = new ThemeManager(); "],"names":["ThemeManager","constructor","themeToggle","document","getElementById","currentTheme","localStorage","getItem","init","setTheme","addEventListener","toggleTheme","theme","documentElement","setAttribute","setItem","icon","querySelector","classList","remove","add","newTheme","themeManager"],"version":3,"file":"aspect-ratio-pro.f5f2d00e.js.map"}